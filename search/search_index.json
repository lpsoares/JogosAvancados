{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Jogos Avan\u00e7ados","text":"<p>DISCIPLINA: Jogos Avan\u00e7ados</p> <p>CARGA HOR\u00c1RIA TOTAL: 80 horas</p> <p>PER\u00cdODO LETIVO: 2024-2</p> <p>EMENTA:</p> <p>Estrutura gen\u00e9rica de game engines. Estudo comparativo de game engines (Unreal, Cryengine, Ogre3D). Engenharia de Software para Jogos. Paralelismo e concorr\u00eancia. Engines de Geometria. Engines de rendering. Engines de anima\u00e7\u00e3o. Engines de F\u00edsica. Engines de \u00c1udio. Engines de Intelig\u00eancia Artificial. Engines de Redes. Testes de game engines. Gerenciamento de vers\u00e3o e configura\u00e7\u00e3o de c\u00f3digos de game engines.</p> <p>OBJETIVOS:</p> <p>Ao final dessa disciplina o estudante ser\u00e1 capaz de:</p> <ul> <li>Criar experi\u00eancias de jogos 3D, utilizando de t\u00e9cnicas avan\u00e7adas de computa\u00e7\u00e3o gr\u00e1fica</li> <li>Criar um portf\u00f3lio digital que demonstre a aplica\u00e7\u00e3o pr\u00e1tica de habilidades avan\u00e7adas em design e desenvolvimento de jogos.</li> <li>Avaliar diferentes t\u00e9cnicas de depura\u00e7\u00e3o e profiling para identificar e resolver problemas de performance.</li> <li>Criar estruturas ou conte\u00fados utilizando t\u00e9cnicas de gera\u00e7\u00e3o procedural que garantam variedade e flexibilidade.</li> <li>Analisar o impacto de diferentes t\u00e9cnicas de computa\u00e7\u00e3o gr\u00e1fica na qualidade visual e na experi\u00eancia do usu\u00e1rio.</li> <li>Criar e implementar estrat\u00e9gias de desenvolvimento que equilibram a qualidade visual e a performance.</li> </ul> <p>CONTE\u00daDO PROGRAM\u00c1TICO:</p> <ol> <li>Tipos de jogos, segmenta\u00e7\u00e3o de mercado e necessidade do uso de engines mais avan\u00e7ados</li> <li>Estudos de caso comparativo em engines</li> <li>Asset pipelines e engines profissionais</li> <li>Representa\u00e7\u00e3o interna de cenas e impacto em mem\u00f3ria e desempenho</li> <li>Culling, ou poda, de elementos fora da cena</li> <li>Customiza\u00e7\u00f5es de renderiza\u00e7\u00e3o</li> <li>Integra\u00e7\u00e3o com f\u00edsica avan\u00e7ada</li> <li>Comportamentos de IA</li> </ol> <p>BIBLIOGRAFIA B\u00c1SICA:</p> <ol> <li>AKENINE-M\u00d6LLER, Tomas; HAINES, Eric; HOFFMAN, Naty; PESCE, Angelo; IWANICKI, Michat; HILLAIRE, S\u00e9bastien. Real-Time Rendering. 4. ed. Boca Raton: CRC Press, 2018. 1178 p.</li> <li>GREGORY, Jason. Game engine architecture. 3. ed. Boca Raton: CRC Press, 2019. 1200 p.</li> <li>LENGYEL, Eric. Mathematics for 3D game programming and computer graphics. 3. ed. Boston: Cengage Learning, 2012. 545 p.</li> </ol> <p>BIBLIOGRAFIA COMPLEMENTAR:</p> <ol> <li>BARLAS, Gerassimos. Multicore and GPU programming: an integrated approach. 1. ed. Waltham: Morgan Kaufmann, 2015. 677 p.</li> <li>GUNDLACH, Sascha; MARTIN, Michelle K. Mastering CryEngine: use CryENGINE at a professional level and master the engine's advanced features to build AAA quality games. 1. ed. Birmingham: Packt Publishing, 2014. 257 p.</li> <li>NYSTROM, Rober. Game programming patterns. 1. ed. Lexington: Genever Benning, 2014. 345 p.</li> <li>PHARR, Matt; JAKOB, Wenzel; HUMPHREYS, Greg. Physically based rendering: from theory to implementation. 3. ed. Cambridge: Morgan Kaufmann, 2017. 1233 p.</li> <li>PV, Satheesh. Unreal engine 4 game development essentials: master the basics of unreal engine 4 to build stuniing video games. 1. ed. Birmingham: Packt Publishing, 2016. 241 p.</li> </ol>"},{"location":"aulas/01-introducao/","title":"Introdu\u00e7\u00e3o a Jogos Avan\u00e7ados","text":"<p>Nesta primeira aula iremos ter uma apresenta\u00e7\u00e3o da disciplina e da principal ferramenta usada no curso, o Unreal.</p>"},{"location":"aulas/01-introducao/#atividades","title":"Atividades","text":"<p>Tutorial - Unreal Engine Editor Fundamentals</p> <p>Tutorial - Your First Hour in Unreal Engine 5.2</p> <p>Tutorial - Your First Game In Unreal Engine 5</p>"},{"location":"aulas/02-blockmesh/","title":"Blockmesh (Greybox)","text":"<p>Nesta aula trabalharemos com a estrat\u00e9gia de montar cenas 3D progressimante.</p>"},{"location":"aulas/02-blockmesh/#atividades","title":"Atividades","text":"<p>Atividade - desenho de uma linha manualmente</p>"},{"location":"aulas/02-blockmesh/blockmesh/","title":"Blockmesh","text":""},{"location":"aulas/02-blockmesh/blockmesh/#motivacao","title":"Motiva\u00e7\u00e3o","text":"<p>Voc\u00ea acabou de receber as diretrizes de cria\u00e7\u00e3o de um novo n\u00edvel do jogo que sua empresa est\u00e1 desenvolvendo. Com isso em mente, voc\u00ea abre sua pasta de assets e come\u00e7a a criar o mapa nos m\u00ednimos detalhes. Voc\u00ea utiliza tudo o que acha que deve conter nele, caixas, m\u00f3veis, \u00e1rvores, decora\u00e7\u00e3o, entre outros. Passa um bom tempo escolhendo os shaders e texturas, e tem certeza que seu trabalho atende a todos os objetivos do documento que lhe foi entregue.</p> <p>Ao final de v\u00e1rios dias de trabalho, \u00e9 feita uma revis\u00e3o e voc\u00ea descobre que n\u00e3o \u00e9 divertido se movimentar pelo mapa. Algumas \u00e1reas ficaram inacess\u00edveis devido \u00e0s colis\u00f5es mal ajustadas, e o fluxo do n\u00edvel n\u00e3o est\u00e1 funcionando como esperado.</p> <p>Esse \u00e9 um problema comum quando se come\u00e7a a cria\u00e7\u00e3o de um n\u00edvel diretamente com detalhes finais, sem um planejamento adequado das mec\u00e2nicas e do layout b\u00e1sico. Como evitar isso?</p>"},{"location":"aulas/02-blockmesh/blockmesh/#conceito","title":"Conceito","text":"<p>Blockmesh, Greybox, Whitebox ou Level Blockout. Como muitas coisas no desenvolvimento de jogos, temos nomes diferentes para nos referirmos ao mesmo conceito. Essa t\u00e9cnica consiste em criar um n\u00edvel de jogo utilizando formas simples, que frequentemente chamamos de malhas primitivas. Cubos, c\u00e1psulas e cilindros s\u00e3o os mais utilizados, mas podemos incluir elementos mais avan\u00e7ados, como escadas e portas, dependendo da engine escolhida.</p> <p>O uso de formas, cores e texturas simples \u00e9 essencial nesse est\u00e1gio, pois nosso foco principal \u00e9 entender as propor\u00e7\u00f5es e dist\u00e2ncias no jogo. Queremos visualizar a composi\u00e7\u00e3o geral do mapa, testar a jogabilidade b\u00e1sica e garantir que o fluxo do n\u00edvel esteja adequado antes de adicionar detalhes. Esse processo permite identificar e corrigir problemas de design de forma eficiente, garantindo que o mapa seja divertido e funcional antes de investir tempo na cria\u00e7\u00e3o dos assets finais.</p> <p>Ainda durante o processo de blocagem, \u00e9 poss\u00edvel identificar assets que ser\u00e3o repetidos mais vezes, permitindo ter uma vis\u00e3o melhor do escopo do projeto e onde ele pode ser expans\u00edvel ou redut\u00edvel antes de come\u00e7ar a produzir a arte final.</p> <p>Entenda o <code>blockmesh</code> como um croqui do seu n\u00edvel final, que a cada itera\u00e7\u00e3o ir\u00e1 melhorar gradualmente at\u00e9, por fim, inserir as artes finais. Lembre-se que, nesse primeiro momento, n\u00e3o devemos nos apegar a detalhes de texturas e ilumina\u00e7\u00e3o. Essas s\u00e3o fases que vir\u00e3o depois e ajudar\u00e3o muito na composi\u00e7\u00e3o do n\u00edvel. Come\u00e7ar com uma base forte \u00e9 o melhor caminho.</p> <p>E j\u00e1 que estamos falando de uma base forte, \u00e9 bom abordarmos um pouco sobre composi\u00e7\u00e3o 3D. Assim como na composi\u00e7\u00e3o cl\u00e1ssica, podemos pensar em diferentes planos:</p> <ul> <li> <p>Primeiro Plano: O plano que est\u00e1 mais pr\u00f3ximo ao observador, serve para enquadrar o foco do jogador. Ele \u00e9 usado para focar o jogador nos pontos de interesse ou nos pontos mais importantes, al\u00e9m de evitar que o que est\u00e1 mais pr\u00f3ximo pare\u00e7a vazio.</p> </li> <li> <p>Centro de Interesse: A camada ou as camadas onde a parte predominante da composi\u00e7\u00e3o se localiza. O ponto focal da composi\u00e7\u00e3o n\u00e3o deve se confundir com o resto da cena, mas deve se destacar dos outros elementos. Planeje sua composi\u00e7\u00e3o de forma que o ponto de interesse seja o primeiro que o observador (ou jogador) veja, construindo um objeto de identifica\u00e7\u00e3o da cena, por exemplo: um castelo nas montanhas com uma torre em chamas. As cores do castelo devem se destacar das cores da montanha e ele deve ser feito para ser visto antes das montanhas.</p> </li> <li> <p>Plano de Fundo: A camada que fecha a composi\u00e7\u00e3o. A maioria dos planos de fundo s\u00e3o cenas do horizonte e do c\u00e9u. O plano de fundo geralmente \u00e9 feito com um esquema de cores mais claras, sem objetos muito detalhados, para ajudar o observador a focar no que \u00e9 dominante.</p> </li> </ul> <p>Com isso em mente, j\u00e1 podemos iniciar a constru\u00e7\u00e3o de nosso primeiro n\u00edvel. </p>"},{"location":"aulas/02-blockmesh/blockmesh/#aplicacao","title":"Aplica\u00e7\u00e3o","text":"<p>Toda parte de composi\u00e7\u00e3o do seu jogo \u00e9 dependente de diversos pontos a serem definidos por um guia de design, uma das op\u00e7\u00f5es mais b\u00e1sicas \u00e9: Qual o modo de c\u00e2mera principal que irei utilizar nesse jogo?</p> <p>Ser\u00e1 utilizado o modelo de terceira pessoa para a sequ\u00eancia a seguir, mas fique a vontade para escolher o que fizer mais sentido para seu projeto.</p> <p>Recomendamos o uso das templates FPS e TPS pois elas j\u00e1 implementam uma s\u00e9rie de algoritmos para a c\u00e2mera, que de outra forma teriamos de fazer manualmente. </p>"},{"location":"aulas/02-blockmesh/blockmesh/#entendendo-a-ferramenta","title":"Entendendo a ferramenta","text":"<p>Assim que criamos o projeto baseado em um template, a UE5 cria um Level padr\u00e3o. Se quiser pode testar se est\u00e1 tudo correto com o projeto clicando no Play This Level no topo do editor. </p> <p></p> <p>Mas para a atividade crie um Level novo. Para isso abra seu Content Drawer, clique em uma \u00e1rea livre dele e selecione <code>Create Basic Asset &gt; Level</code>, ou ainda <code>File &gt; New Level</code></p> <p></p> <p>Nomeie-o como melhor lhe agradar, e d\u00ea um duplo clique para abrir esse novo cen\u00e1rio. Caso a engine lhe pe\u00e7a para salvar-lo, basta clicar em <code>Save Selected</code></p> <p></p> <p>Neste novo n\u00edvel, temos apenas o n\u00f3 raiz, visivel no outliner, assim n\u00e3o \u00e9 poss\u00edvel visualizar nada. Vamos assim primeiro construir a base de ilumina\u00e7\u00e3o para nosso n\u00edvel. Precisamos colocar alguns Actors, para abrir a janela de <code>Place Actors</code> v\u00e1 em <code>Window &gt; Place Actors</code> ou se preferir utilize o menu de <code>Quickly add to the project</code></p> <p></p> <p></p> <ul> <li>Light - Directional Light: Luz direcional simulando o sol, ilumina toda a cena de maneira uniforme e paralela.</li> <li>Visual Effects - Sky Atmosphere: Sistema que simula a dispers\u00e3o atmosf\u00e9rica da luz.</li> <li>Visual Effects - Exponential Height Fog: N\u00e9voa que se acumula exponencialmente com a altura, criando profundidade atmosf\u00e9rica na cena.</li> </ul> <p>Esses elementos n\u00e3o s\u00e3o obrigat\u00f3rios, mas com eles conseguimos ter uma experi\u00eancia mais conhecida ao navegar pelo editor. Na imagem abaixo conseguimos visualiza a diferen\u00e7a sem e com esses actors inseridos na cena. </p> <p></p> <p>Vamos come\u00e7ar a popular a cena com alguns elementos. Selecionando Shapes temos algumas op\u00e7\u00f5es de malhas \"primitivas\"</p> <p></p> <p>Basta arrasta-los para a cena, e ent\u00e3o, quando estiver selecionados teremos acesso aos seus detalhes. </p> <p></p> <p>Para montar o n\u00edvel com essas formas podemos alterar sua escala no componente transform</p> <p></p> <p>Uma outra op\u00e7\u00e3o para montar criar o n\u00edvel \u00e9 utilizando os Brushes de Geometria da Unreal. </p> <p></p> <p>Diferente das shapes, que s\u00e3o Static Meshes, esses brushes de geometria s\u00e3o elementos procedurais, que podemos modificar diretamente os par\u00e2metros que os definem: </p> <p></p> <p>Para al\u00e9m disso temos mais formas poss\u00edveis, cubos, cones, cilindro, escadas diversas e outros.</p> <p>Abaixo os par\u00e2metros de outro tipo de geometria: </p> <p></p> <p></p> <p>Perceba que um dos par\u00e2metros na aba de detalhes \u00e9 o Brush Type, que por padr\u00e3o \u00e9 aditivo, mas podemos alterar para subtrativo, para fazer um rasgo em outro brush: </p> <p></p> <p>Por fim, a UE tem um modo dedicado a edi\u00e7\u00e3o desse brushes para r\u00e1pida prototipa\u00e7\u00e3o de n\u00edveis, logo abaixo no nome da aba, temos um dropdown que no momento est\u00e1 como Selection Mode , existe a op\u00e7\u00e3o Brush Editing que ent\u00e3o podemos modificar faces, bordas e v\u00e9rtices diretamente. </p> <p></p> <p>Podemos tamb\u00e9m utilizar a fun\u00e7\u00e3o de extrus\u00e3o de elementos para criar objetos mais complexos: </p> <p></p> <p>Quando utilizamos a escala do transform de um objeto, sempre que poss\u00edvel \u00e9 prefer\u00edvel  manter uma escala uniforme, ou seja, o mesmo valor em todos os campos de escala, pois isso evita uma s\u00e9rie de problemas que podem vir a ocorrer, principalmente se esse objeto for modificado dentro de jogo de alguma forma.</p>"},{"location":"aulas/02-blockmesh/blockmesh/#blocagem-de-um-cenario","title":"Blocagem de um cen\u00e1rio","text":"<p>Agora que voc\u00ea j\u00e1 conhece a ferramenta, consegue fazer a blocagem de um cen\u00e1rio. </p> <p>Para melhor organiza\u00e7\u00e3o vou criar uma pasta no Outliner com nossa luz e efeitos especiais: </p> <p></p> <p>Feito isso o primeiro passo \u00e9 colocar um ponto de inicio para o jogador com o Actor Player Start, e algum objeto para ele ficar em cima: </p> <p></p> <p></p> <p>Para facilitar, vamos pensar no in\u00edcio de um jogo, vamos colocar um objetivo: </p> <p></p> <p>Por enquanto n\u00e3o parece nada, mas aplicando os princ\u00edpios de planos, conseguimos criar uma composi\u00e7\u00e3o que seja interessante. </p> <p>Melhorando o ponto de interesse</p> <p></p> <p>Criando um primeiro plano</p> <p></p> <p>Adicionando elemento secund\u00e1rio no centro de interesse.  </p> <p></p> <p>Inserindo elementos no plano de fundo</p> <p></p> <p>Aos poucos e em um processo iterativo o n\u00edvel come\u00e7a a tomar forma. </p>"},{"location":"aulas/02-blockmesh/blockmesh/#missao-blockmesh","title":"Miss\u00e3o Blockmesh:","text":"<p>Sua tarefa \u00e9 criar a blocagem (blockmesh) de um n\u00edvel de jogo. Esta etapa \u00e9 crucial para garantir que o n\u00edvel tenha um bom fluxo e que os principais problemas de design sejam identificados e corrigidos antes de investir tempo nos detalhes finais. </p> <ul> <li>Comece com um esbo\u00e7o no papel ou digitalmente. Pense na experi\u00eancia do jogador e nos desafios que deseja criar.</li> <li>Utilize formas primitivas (cubos, cilindros, etc.) para construir o layout b\u00e1sico.</li> <li>Inclua elementos essenciais como plataformas, escadas, portas e obst\u00e1culos.</li> <li>Mantenha cores e texturas simples para focar na jogabilidade e no layout.</li> <li>Convide colegas para testar sua blocagem e fornecer feedback</li> </ul>"},{"location":"aulas/02-blockmesh/blockmesh/#entrega","title":"Entrega:","text":"<p>Para entrega \u00e9 necess\u00e1rio enviar uma build execut\u00e1vel do seu mapa no Blackboard. </p>"},{"location":"aulas/02-blockmesh/blockmesh/#fazendo-a-build","title":"Fazendo a Build:","text":"<p>Para fazer a build v\u00e1 em <code>Edit &gt; Project Settings</code>, procure por <code>Maps &amp; Modes</code> e em <code>Default Map</code> selecione o mapa que voc\u00ea criou: </p> <p></p> <p>Feito isso v\u00e1 ao \u00edcone Platforms e selecione <code>Windows &gt; Package Project</code></p> <p></p> <p>Crie uma pasta para a build de seu projeto e selecione. Voc\u00ea dever\u00e1 enviar essa pasta zipada. </p>"},{"location":"aulas/02-blockmesh/blockmesh/#referencias","title":"Refer\u00eancias","text":""},{"location":"aulas/02-blockmesh/blockmesh/#artigos","title":"Artigos","text":"<p>\ud83d\udcd1 The Level Design Book: Blockout \ud83d\udcd1 Level Design Process #01: Cube to Temple \ud83d\udcfa GDC 2018: Level Design Workshop: Blockmesh and Lighting Tips \ud83d\udcfa GDC 2013: Ten Principles for Good Level Design \ud83d\udcfa GDC 2014: Level Design in a Day: A Series of First Steps - Overcoming the Digital Blank Page \ud83d\udcfa GMTK: How Level Design Can Tell a Story \ud83d\udcfa Blizzcon 2017 - DesignCraft: Building Blocks of Level Design Panel \ud83d\udcfa Keeping Your Blockouts Simple \ud83d\udcfa UE5: Cube Grid \ud83d\udcfa UE5: 3 Methods for Blocking Out Environments and Level Designs in UE5 \ud83d\udcd6 Totten, C. W. (2017). Level Design: Processes and Experiences. United Kingdom: CRC Press. \ud83d\udcd6 Bauer, B. (n.d.). A Practical Guide to Level Design: From Theory to Practice, Diplomacy and Production. United States: CRC Press. \ud83d\udcd6 Rogers, S. (2010). Level Up! The Guide to Great Video Game Design. United Kingdom: Wiley.</p> <p>#blocktober no Twitter/X Blocktober no Artstation</p>"}]}